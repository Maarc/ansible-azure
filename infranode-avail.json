{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string"
    },

    "tags": {
      "type": "object",
      "defaultValue": {
        "region": "NorthEurope",
        "zone": "infra",
        "stage": "dev"
      }
    },
    "masterKey": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "vmSize": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },

    "image": {
      "type": "string",
      "allowedValues": [
        "centos",
        "rhel"
      ],
      "defaultValue": "centos",
      "metadata": {
        "description": "OS to use. Centos or Redhat Enterprise Linux"
      }
    }

  },
  "variables": {
    "apiVersion": "2015-06-15",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "storageName": "[concat(uniqueString(resourceGroup().id), parameters('vmName'))]",
    "location": "[resourceGroup().location]",
    "sa": "[variables('storageName')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetName": "parameters('subnetName')",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "centos": {
      "publisher": "Openlogic",
      "offer": "CentOS",
      "sku": "7.2",
      "version": "latest"
    },
    "rhel": {
      "publisher": "RedHat",
      "offer": "RHEL",
      "sku": "7.2",
      "version": "latest"
    },
    "vhdStorageType": "Standard_LRS"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('vhdStorageType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'), 'nic')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
           "[concat('Microsoft.Network/virtualNetworks/', variables('VNet-Name'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('LoadBalancer-name'))]"
        ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[parameters('loadBalancerBackendAddressPools')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine",
        "openshift": "3.2",
        "region": "[parameters('tags').region]",
        "zone": "[parameters('tags').zone]",
        "stage": "[parameters('tags').stage]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('vmName'), 'nic'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"


      ],
      "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
      },

      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                },
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('masterKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('rhel')]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('sa'), '.blob.core.windows.net/openshiftvmachines/', parameters('vmName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "128",
              "lun": 0,
              "name": "[parameters('vmName')]",
              "vhd": {
                "uri": "[concat('http://', variables('sa'), '.blob.core.windows.net/openshiftvmachines/', parameters('vmName'), '_datadisk1.vhd')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), 'nic'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "pip": {
      "type": "string",
      "value": "[reference(concat(parameters('vmName'), 'pip')).ipAddress]"
    }
  }
}
